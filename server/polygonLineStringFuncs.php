<?phpfunction getPolygonOuterRect($polygonCoords){	$l=count($polygonCoords);	$xArr = array();	$yArr = array();	for($i=0;$i<$l;$i++)	{		$coords = $polygonCoords[$i];		array_push($xArr, $coords[0]);		array_push($yArr, $coords[1]);	}	$Xmin = min($xArr);	$Ymin = min($yArr);	$Xmax = max($xArr);	$Ymax = max($yArr);		return array($Xmin, $Ymin, $Xmax, $Ymax);}function getRectArea($rect){	$Xmin = $rect[0];	$Ymin = $rect[1];	$Xmax = $rect[2];	$Ymax = $rect[3];	return ($Xmax-$Xmin)*($Ymax-$Ymin);}function getPolygonOuterRectArea($polygonCoords){	$rect = getPolygonOuterRect($polygonCoords);	return getRectArea($rect);}function getCenterPoint($x1, $y1, $x2, $y2){	$x = ($x1+$x2)/2;	$y = ($y1+$y2)/2;	return array('x'=>$x, 'y'=>$y);}function getLineLength($x1, $y1, $x2, $y2){	$add = pow($x2-$x1,2) + pow($y2-$y1,2);	return sqrt($add);}function getAngle($x1, $y1, $x2, $y2){	if(($x2-$x1) == 0)	{		$PI = pi(); //js Math.PI		$tmp = $y2-$y1;		if($tmp>0)			return $PI/2;		else if($tmp<0)			return -$PI/2;		else			return 0;			}	else		return -atan(($y2-$y1)/($x2-$x1));}function getLineStringTextPosition($x1, $y1, $x2, $y2){	$textPosition = array();	$center = getCenterPoint($x1, $y1, $x2, $y2);	$textPosition['x'] = $center['x'];	$textPosition['y'] = $center['y'];		$textPosition['angle'] = getAngle($x1, $y1, $x2, $y2);	return $textPosition;}function getLineStringLengthAndTextPoints($lineStringCoords, $cri){	$result = array();	$lines = array();	$positions = array();	$l=count($lineStringCoords);	$total = 0;	$flag = false;	$longest = 0;	$j = 0;	for($i=1;$i<$l;$i++)	{		$coords1 = $lineStringCoords[$i-1];		$x1 = $coords1[0];		$y1 = $coords1[1];		$coords2 = $lineStringCoords[$i];		$x2 = $coords2[0];		$y2 = $coords2[1];		$tmpLen = getLineLength($x1, $y1, $x2, $y2);// get a line length				//record the longest line and index		if($longest < $tmpLen)		{			$longest = $tmpLen;			$j = $i;		}				$total += $tmpLen;// add to total				//if tmp line > $critical value		if($tmpLen > $cri)		{			$text = getLineStringTextPosition($x1, $y1, $x2, $y2);			array_push($positions, $text);// push to positions array			$flag = true;		}	}		if(!$flag)// if no line is long enough, refer the longest one	{		$coords1 = $lineStringCoords[$j-1];		$x1 = $coords1[0];		$y1 = $coords1[1];		$coords2 = $lineStringCoords[$j];		$x2 = $coords2[0];		$y2 = $coords2[1];		$text = getLineStringTextPosition($x1, $y1, $x2, $y2);		array_push($positions, $text);// push to positions array	}	$result['total'] = $total;	$result['positions'] = $positions;	return $result;}function getZoomLevel($n, $arr){	for($i=0;$i<count($arr);$i++)	{		if($n>=$arr[$i])			return pow(2, $i-4);	}}?>
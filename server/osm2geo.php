<?phpinclude('addGeometryProperties.php');// setting the bounding box [minX,minY,maxX,maxY]; x -> long, y -> latfunction getBounds($bounds){	$bbox = array();	array_push($bbox, (float)($bounds[0]['minlon']));	array_push($bbox, (float)($bounds[0]['minlat']));	array_push($bbox, (float)($bounds[0]['maxlon']));	array_push($bbox, (float)($bounds[0]['maxlat']));	return $bbox;}// Function to set props for a featurefunction setProps($element){	$tags = $element->xpath("tag");	for($i=0;$i<count($tags);$i++)	{		$tag = $tags[$i];		$k = (string)$tag["k"][0];		$properties[$k] = (string)$tag["v"][0];	}	return $properties;}// Generic function to create a feature of given typefunction getFeature($id, $element, $type){	$feature["id"] = $id;	$feature["geometry"]["type"] = $type;	$feature["geometry"]["coordinates"] = array();	$feature["type"] = "Feature";	$feature["properties"] = setProps($element);	return $feature;}function osm2geo($xml)//$xml为XML对象, 用simplexml_load_file或simplexml_load_string获得{	if(!$xml) return;	// Initialize the empty GeoJSON object	$geo['type'] = "FeatureCollection";	$geo['features'] = array();    $geo['bbox'] = getBounds($xml->xpath('bounds'));	$lineStringFeatures = array();    // Ways    $ways = $xml->xpath("way");	for($i=0;$i<count($ways);$i++)	{		$ele = $ways[$i];		$tmp = $ele->xpath('@id');		$id = (int)$tmp[0];		$feature = array();		// List all the nodes		$nodes = $ele->xpath("nd");				// If first and last nd are same, then its a polygon		$last = count($nodes)-1;		if((string)$nodes[$last]["ref"] == (string)$nodes[0]["ref"]){			$type = "Polygon";			$feature = getFeature($id, $ele, "Polygon");			array_push($feature['geometry']['coordinates'], array());		}else{			$type = "LineString";			$feature = getFeature($id, $ele, "LineString");		}		for($j=0;$j<count($nodes);$j++)		{			$node = $xml->xpath("node[@id='".$nodes[$j]["ref"]."']"); // find the node with id ref'ed in way//***						$coords = array((float)$node[0]["lon"], (float)$node[0]["lat"]); // get the lat,lon of the node			// If polygon push it inside the coords[[]]			if($feature['geometry']['type'] == "Polygon"){				array_push($feature['geometry']['coordinates'][0], $coords);			}// if just Line push inside coords[]			else{				array_push($feature['geometry']['coordinates'], $coords);			}		}				//add properties to geometry, textPosition and zoom		if($type == 'Polygon')		{			$props = addGeometryProperties($feature['geometry']['coordinates'][0], $type);			$feature['geometry']['textPosition'] = $props['textPosition'];			$feature['geometry']['zoom'] = $props['zoom'];			// Save the feature in the Main object features			array_push($geo['features'], $feature);		}		else if($type == 'LineString')		{			$props = addGeometryProperties($feature['geometry']['coordinates'], $type);			$feature['geometry']['textPosition'] = $props['textPosition'];			$feature['geometry']['zoom'] = $props['zoom'];			// Save the feature in the LineString features			array_push($lineStringFeatures, $feature);			}	}		// Save the feature in the Main object features	for($k=0;$k<count($lineStringFeatures);$k++)	{		array_push($geo['features'], $lineStringFeatures[$k]);	}    // Points (POI) point never belongs to 2 tils at the same time	$points = $xml->xpath("node[tag]");	for($k=0;$k<count($points);$k++)	{		$ele = $points[$k];		$tmp = $ele->xpath('@id');		$id = (int)$tmp[0];        $feature = getFeature($id, $ele, "Point");        array_push($feature['geometry']['coordinates'], (float)($ele['lon']));		array_push($feature['geometry']['coordinates'], (float)($ele['lat']));		// Save the point in Main object		$feature['geometry']['zoom'] = 4;        array_push($geo['features'], $feature);		}		// Finally return the GeoJSON object	return $geo;}?>